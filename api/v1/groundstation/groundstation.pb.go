// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stellarstation/api/v1/groundstation/groundstation.proto

package groundstation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request for the `ListPlans` method.
type ListPlansRequest struct {
	// The ID of the ground station to list plans for. The ID can be found on the StellarStation
	// Console page for the ground station.
	GroundStationId string `protobuf:"bytes,1,opt,name=ground_station_id,json=groundStationId,proto3" json:"ground_station_id,omitempty"`
	// The start time of the range of plans to list (inclusive). Only plans with an Acquisition of
	// Signal (AOS) at or after this time will be returned. It is an error for the duration between
	// `aos_after` and `aos_before` to be longer than 31 days.
	AosAfter *timestamp.Timestamp `protobuf:"bytes,2,opt,name=aos_after,json=aosAfter,proto3" json:"aos_after,omitempty"`
	// The end time of the range of plans to list (exclusive). Only plans with an Acquisition of
	// Signal (AOS) before this time will be returned. It is an error for the duration between
	// `aos_after` and `aos_before` to be longer than 31 days.
	AosBefore            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=aos_before,json=aosBefore,proto3" json:"aos_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListPlansRequest) Reset()         { *m = ListPlansRequest{} }
func (m *ListPlansRequest) String() string { return proto.CompactTextString(m) }
func (*ListPlansRequest) ProtoMessage()    {}
func (*ListPlansRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_groundstation_182f47a91dbb56c9, []int{0}
}
func (m *ListPlansRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPlansRequest.Unmarshal(m, b)
}
func (m *ListPlansRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPlansRequest.Marshal(b, m, deterministic)
}
func (dst *ListPlansRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPlansRequest.Merge(dst, src)
}
func (m *ListPlansRequest) XXX_Size() int {
	return xxx_messageInfo_ListPlansRequest.Size(m)
}
func (m *ListPlansRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPlansRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPlansRequest proto.InternalMessageInfo

func (m *ListPlansRequest) GetGroundStationId() string {
	if m != nil {
		return m.GroundStationId
	}
	return ""
}

func (m *ListPlansRequest) GetAosAfter() *timestamp.Timestamp {
	if m != nil {
		return m.AosAfter
	}
	return nil
}

func (m *ListPlansRequest) GetAosBefore() *timestamp.Timestamp {
	if m != nil {
		return m.AosBefore
	}
	return nil
}

// A response from the `ListPlans` method.
type ListPlansResponse struct {
	// The requested list of plans for the ground station.
	Plan                 []*Plan  `protobuf:"bytes,1,rep,name=plan,proto3" json:"plan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPlansResponse) Reset()         { *m = ListPlansResponse{} }
func (m *ListPlansResponse) String() string { return proto.CompactTextString(m) }
func (*ListPlansResponse) ProtoMessage()    {}
func (*ListPlansResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_groundstation_182f47a91dbb56c9, []int{1}
}
func (m *ListPlansResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPlansResponse.Unmarshal(m, b)
}
func (m *ListPlansResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPlansResponse.Marshal(b, m, deterministic)
}
func (dst *ListPlansResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPlansResponse.Merge(dst, src)
}
func (m *ListPlansResponse) XXX_Size() int {
	return xxx_messageInfo_ListPlansResponse.Size(m)
}
func (m *ListPlansResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPlansResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPlansResponse proto.InternalMessageInfo

func (m *ListPlansResponse) GetPlan() []*Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

// A scheduled pass. The plan will be executed on its ground station to communicate with its satellite
// during a time range between AOS and LOS, unless explicitly cancelled.
type Plan struct {
	// The ID of this plan.
	PlanId string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	// The TLE for the satellite in this plan.
	Tle *Tle `protobuf:"bytes,2,opt,name=tle,proto3" json:"tle,omitempty"`
	// The time of AOS between the ground station and satellite in this plan.
	AosTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=aos_time,json=aosTime,proto3" json:"aos_time,omitempty"`
	// The time of LOS between the ground station and satellite in this plan.
	LosTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=los_time,json=losTime,proto3" json:"los_time,omitempty"`
	// The center frequency, in Hz, for downlinking in this plan. 0 if downlink is not available in
	// this plan.
	DownlinkCenterFrequencyHz uint64 `protobuf:"varint,5,opt,name=downlink_center_frequency_hz,json=downlinkCenterFrequencyHz,proto3" json:"downlink_center_frequency_hz,omitempty"`
	// The center frequency, in Hz, for uplinking in this plan. 0 if uplink is not available in this
	// plan.
	UplinkCenterFrequencyHz uint64   `protobuf:"varint,6,opt,name=uplink_center_frequency_hz,json=uplinkCenterFrequencyHz,proto3" json:"uplink_center_frequency_hz,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Plan) Reset()         { *m = Plan{} }
func (m *Plan) String() string { return proto.CompactTextString(m) }
func (*Plan) ProtoMessage()    {}
func (*Plan) Descriptor() ([]byte, []int) {
	return fileDescriptor_groundstation_182f47a91dbb56c9, []int{2}
}
func (m *Plan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plan.Unmarshal(m, b)
}
func (m *Plan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plan.Marshal(b, m, deterministic)
}
func (dst *Plan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plan.Merge(dst, src)
}
func (m *Plan) XXX_Size() int {
	return xxx_messageInfo_Plan.Size(m)
}
func (m *Plan) XXX_DiscardUnknown() {
	xxx_messageInfo_Plan.DiscardUnknown(m)
}

var xxx_messageInfo_Plan proto.InternalMessageInfo

func (m *Plan) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

func (m *Plan) GetTle() *Tle {
	if m != nil {
		return m.Tle
	}
	return nil
}

func (m *Plan) GetAosTime() *timestamp.Timestamp {
	if m != nil {
		return m.AosTime
	}
	return nil
}

func (m *Plan) GetLosTime() *timestamp.Timestamp {
	if m != nil {
		return m.LosTime
	}
	return nil
}

func (m *Plan) GetDownlinkCenterFrequencyHz() uint64 {
	if m != nil {
		return m.DownlinkCenterFrequencyHz
	}
	return 0
}

func (m *Plan) GetUplinkCenterFrequencyHz() uint64 {
	if m != nil {
		return m.UplinkCenterFrequencyHz
	}
	return 0
}

// Unparsed TLE data for a satellite - https://en.wikipedia.org/wiki/Two-line_element_set
type Tle struct {
	// The first line of the TLE. Not a title line.
	Line_1 string `protobuf:"bytes,1,opt,name=line_1,json=line1,proto3" json:"line_1,omitempty"`
	// The second line of the TLE.
	Line_2               string   `protobuf:"bytes,2,opt,name=line_2,json=line2,proto3" json:"line_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tle) Reset()         { *m = Tle{} }
func (m *Tle) String() string { return proto.CompactTextString(m) }
func (*Tle) ProtoMessage()    {}
func (*Tle) Descriptor() ([]byte, []int) {
	return fileDescriptor_groundstation_182f47a91dbb56c9, []int{3}
}
func (m *Tle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tle.Unmarshal(m, b)
}
func (m *Tle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tle.Marshal(b, m, deterministic)
}
func (dst *Tle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tle.Merge(dst, src)
}
func (m *Tle) XXX_Size() int {
	return xxx_messageInfo_Tle.Size(m)
}
func (m *Tle) XXX_DiscardUnknown() {
	xxx_messageInfo_Tle.DiscardUnknown(m)
}

var xxx_messageInfo_Tle proto.InternalMessageInfo

func (m *Tle) GetLine_1() string {
	if m != nil {
		return m.Line_1
	}
	return ""
}

func (m *Tle) GetLine_2() string {
	if m != nil {
		return m.Line_2
	}
	return ""
}

func init() {
	proto.RegisterType((*ListPlansRequest)(nil), "stellarstation.api.v1.groundstation.ListPlansRequest")
	proto.RegisterType((*ListPlansResponse)(nil), "stellarstation.api.v1.groundstation.ListPlansResponse")
	proto.RegisterType((*Plan)(nil), "stellarstation.api.v1.groundstation.Plan")
	proto.RegisterType((*Tle)(nil), "stellarstation.api.v1.groundstation.Tle")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GroundStationServiceClient is the client API for GroundStationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroundStationServiceClient interface {
	// Lists the plans for a particular ground station.
	//
	// The request will be closed with an `INVALID_ARGUMENT` status if `ground_station_id`,
	// `aos_after`, or `aos_before` are missing, or the duration between the two times is longer than
	// 31 days.
	ListPlans(ctx context.Context, in *ListPlansRequest, opts ...grpc.CallOption) (*ListPlansResponse, error)
}

type groundStationServiceClient struct {
	cc *grpc.ClientConn
}

func NewGroundStationServiceClient(cc *grpc.ClientConn) GroundStationServiceClient {
	return &groundStationServiceClient{cc}
}

func (c *groundStationServiceClient) ListPlans(ctx context.Context, in *ListPlansRequest, opts ...grpc.CallOption) (*ListPlansResponse, error) {
	out := new(ListPlansResponse)
	err := c.cc.Invoke(ctx, "/stellarstation.api.v1.groundstation.GroundStationService/ListPlans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroundStationServiceServer is the server API for GroundStationService service.
type GroundStationServiceServer interface {
	// Lists the plans for a particular ground station.
	//
	// The request will be closed with an `INVALID_ARGUMENT` status if `ground_station_id`,
	// `aos_after`, or `aos_before` are missing, or the duration between the two times is longer than
	// 31 days.
	ListPlans(context.Context, *ListPlansRequest) (*ListPlansResponse, error)
}

func RegisterGroundStationServiceServer(s *grpc.Server, srv GroundStationServiceServer) {
	s.RegisterService(&_GroundStationService_serviceDesc, srv)
}

func _GroundStationService_ListPlans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPlansRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroundStationServiceServer).ListPlans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stellarstation.api.v1.groundstation.GroundStationService/ListPlans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroundStationServiceServer).ListPlans(ctx, req.(*ListPlansRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GroundStationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stellarstation.api.v1.groundstation.GroundStationService",
	HandlerType: (*GroundStationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPlans",
			Handler:    _GroundStationService_ListPlans_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stellarstation/api/v1/groundstation/groundstation.proto",
}

func init() {
	proto.RegisterFile("stellarstation/api/v1/groundstation/groundstation.proto", fileDescriptor_groundstation_182f47a91dbb56c9)
}

var fileDescriptor_groundstation_182f47a91dbb56c9 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x6f, 0x6b, 0x13, 0x41,
	0x10, 0xc6, 0xb9, 0x26, 0x4d, 0xcd, 0x14, 0xd1, 0x2e, 0x4a, 0xcf, 0x20, 0x18, 0xe2, 0x0b, 0x4f,
	0x5f, 0xec, 0x91, 0x2b, 0xb5, 0xa8, 0x88, 0x18, 0x41, 0x2d, 0x88, 0x84, 0x6b, 0x5e, 0xf9, 0xe6,
	0xd8, 0xe4, 0x26, 0x71, 0x71, 0xb3, 0x7b, 0xee, 0xee, 0x45, 0xcc, 0xc7, 0xf0, 0xa3, 0xf8, 0x25,
	0xfc, 0x5a, 0xb2, 0xf7, 0xa7, 0xf6, 0x14, 0xc9, 0xf5, 0xe5, 0xcc, 0x3e, 0xbf, 0x99, 0x9d, 0x67,
	0x06, 0xce, 0x8c, 0x45, 0x21, 0x98, 0x36, 0x96, 0x59, 0xae, 0x64, 0xc8, 0x32, 0x1e, 0x6e, 0xc6,
	0xe1, 0x4a, 0xab, 0x5c, 0xa6, 0x75, 0xb2, 0x11, 0xd1, 0x4c, 0x2b, 0xab, 0xc8, 0xc3, 0x26, 0x48,
	0x59, 0xc6, 0xe9, 0x66, 0x4c, 0x1b, 0xd2, 0xc1, 0x83, 0x95, 0x52, 0x2b, 0x81, 0x61, 0x81, 0xcc,
	0xf3, 0x65, 0x68, 0xf9, 0x1a, 0x8d, 0x65, 0xeb, 0xac, 0xac, 0x32, 0xfa, 0xe9, 0xc1, 0xed, 0x0f,
	0xdc, 0xd8, 0xa9, 0x60, 0xd2, 0xc4, 0xf8, 0x35, 0x47, 0x63, 0xc9, 0x13, 0x38, 0x2a, 0xcb, 0x24,
	0x55, 0x9d, 0x84, 0xa7, 0xbe, 0x37, 0xf4, 0x82, 0x7e, 0x7c, 0xab, 0x7c, 0xb8, 0x28, 0xf3, 0xe7,
	0x29, 0x39, 0x83, 0x3e, 0x53, 0x26, 0x61, 0x4b, 0x8b, 0xda, 0xdf, 0x1b, 0x7a, 0xc1, 0x61, 0x34,
	0xa0, 0x65, 0x57, 0x5a, 0x77, 0xa5, 0xb3, 0xba, 0x6b, 0x7c, 0x83, 0x29, 0xf3, 0xda, 0x69, 0xc9,
	0x33, 0x00, 0x07, 0xce, 0x71, 0xa9, 0x34, 0xfa, 0x9d, 0x9d, 0xa4, 0x6b, 0x33, 0x29, 0xc4, 0xa3,
	0x18, 0x8e, 0xae, 0xfc, 0xd9, 0x64, 0x4a, 0x1a, 0x24, 0x2f, 0xa1, 0x9b, 0x09, 0x26, 0x7d, 0x6f,
	0xd8, 0x09, 0x0e, 0xa3, 0xc7, 0xb4, 0x85, 0x3d, 0xd4, 0x55, 0x88, 0x0b, 0x6c, 0xf4, 0x6b, 0x0f,
	0xba, 0x2e, 0x24, 0xc7, 0x70, 0xe0, 0x12, 0x7f, 0x46, 0xee, 0xb9, 0xf0, 0x3c, 0x25, 0xcf, 0xa1,
	0x63, 0x05, 0x56, 0x33, 0x06, 0xad, 0xea, 0xcf, 0x04, 0xc6, 0x0e, 0x22, 0xa7, 0xe0, 0x06, 0x4f,
	0x9c, 0xfb, 0x2d, 0x46, 0x3d, 0x60, 0xca, 0xb8, 0xc8, 0x61, 0xa2, 0xc6, 0xba, 0xbb, 0x31, 0x51,
	0x61, 0xaf, 0xe0, 0x7e, 0xaa, 0xbe, 0x49, 0xc1, 0xe5, 0x97, 0x64, 0x81, 0xd2, 0xa2, 0x4e, 0x96,
	0xda, 0xed, 0x56, 0x2e, 0xbe, 0x27, 0x9f, 0xb7, 0xfe, 0xfe, 0xd0, 0x0b, 0xba, 0xf1, 0xbd, 0x5a,
	0xf3, 0xa6, 0x90, 0xbc, 0xad, 0x15, 0xef, 0xb7, 0xe4, 0x05, 0x0c, 0xf2, 0xec, 0xbf, 0x78, 0xaf,
	0xc0, 0x8f, 0x4b, 0xc5, 0x3f, 0xf0, 0xe8, 0x04, 0x3a, 0x33, 0x81, 0xe4, 0x2e, 0xf4, 0x04, 0x97,
	0x98, 0x8c, 0x2b, 0x1b, 0xf7, 0x5d, 0x34, 0xbe, 0x4c, 0x47, 0x85, 0x91, 0x55, 0x3a, 0x8a, 0x7e,
	0x78, 0x70, 0xe7, 0xdd, 0xd5, 0xd3, 0xba, 0x40, 0xbd, 0xe1, 0x0b, 0x24, 0x5b, 0xe8, 0x5f, 0xee,
	0x9a, 0x9c, 0xb6, 0x72, 0xfd, 0xef, 0x7b, 0x1e, 0x3c, 0xbd, 0x2e, 0x56, 0x9e, 0xd4, 0xe4, 0x23,
	0x3c, 0x5a, 0xa8, 0x75, 0x1b, 0x78, 0x42, 0x1a, 0x9f, 0x9f, 0xba, 0xe5, 0x4c, 0xbd, 0x4f, 0x37,
	0x1b, 0xa2, 0x79, 0xaf, 0x58, 0xda, 0xc9, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x72, 0x27, 0x8d,
	0xc4, 0xf4, 0x03, 0x00, 0x00,
}
